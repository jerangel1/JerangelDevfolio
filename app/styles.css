body {
    background: #253661;
  }
  
  .fab {
    position: fixed;
    right: 30px;
    bottom: 38px;
    border-radius: 50%;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }
  
  button {
    background: transparent;
    border: 0;
    cursor: pointer;
  }
  
  .fab > button {
    position: relative;
    z-index: 1;
    display: grid;
    place-items: center;
    width: 64px;
    height: 64px;
    border-radius: 50%;
    border: 0;

    color: #f9f9f9;
    transition: 0.2s;
    rotate: 0;
  }
  
  .fab > button > span {
    font-size: 32px;
  }
  .menu {
    position: absolute;
    z-index: 0;
    top: 50%;
    left: 50%;
    width: 285px;
    height: 285px;
    translate: -50% -50%;
    border: 80px solid rgba(255, 255, 255, 0.05);
    border-radius: 50%;
    rotate: -220deg;
    scale: 0.7;
    opacity: 0;
    transition: 0.4s ease-out;
  }
  .fab.open > button {
    rotate: 30deg;
  }

  .fab.open .menu {
    rotate: 0deg;
    scale: 1;
    opacity: 1;
  }
  
  .menu > button {
    position: absolute;
    color: #e0e0e0;
    transition: 0.3s;
  }
  
  .menu > button:hover {
    scale: 1.2;
  }
  
  .material-symbols-outlined {
    font-size: 25px;
  }
  
  .menu > button:nth-child(1) {
    left: 76px;
    top: -62px;
  }
  
  .menu > button:nth-child(2) {
    left: -20px;
    top: -16px;
  }
  
  .menu > button:nth-child(3) {
    left: -64px;
    top: 80px;
  }

  @media only screen and (max-width: 768px) {
    .menu > button:nth-child(1) {
      left: 30px;
      top: -32px;
    }
    
    .menu > button:nth-child(2) {
      left: -20px;
      top: -16px;
    }
    
    .menu > button:nth-child(3) {
      left: -34px;
      top: 30px;
    }
    .fab {
      right: 15px;
      bottom: 15px;
    }
  
    .fab > button {
      width: 48px;
      height: 48px;
    }
  
    .fab > button > span {
      font-size: 24px;
    }
  
    .menu {
      width: 150px;
      height: 150px;
      border: 40px solid rgba(255, 255, 255, 0.05);
    }
  
    .menu > button {
      font-size: 18px;
    }
  }
  
  @media only screen and (max-width: 375px) {
    .fab {
      right: 5px;
      bottom: 5px;
    }
  
    .fab > button {
      width: 36px;
      height: 36px;
    }
  
    .fab > button > span {
      font-size: 18px;
    }
  
    .menu {
      width: 150px;
      height: 150px;
      border: 40px solid rgba(255, 255, 255, 0.05);
    }
  
    .menu > button {
      font-size: 14px;
    }
  }

  section {
  display: flex;
  gap: 10px;
  cursor: pointer;
}

article {
  position: relative;
  overflow: hidden;
  background: #ffffff;
  width: 64px;
  height: 500px;
  border-radius: 36px;
  display: flex;
  align-items: flex-end;
  opacity: 0.9;
  transition: 0.5s;
}

h2,
p {
  margin: 0;
}

article h2 {
  font-size: 24px;
  font-weight: 400;
  color: rgb(255 255 255 / 96%);
}

article p {
  color: rgb(255 255 255 / 66%);
}

article.active {
  width: 400px;
  opacity: 1;
}

article .material-symbols-outlined {
  display: grid;
  place-items: center;
  width: 50px;
  height: 50px;
  background: rgb(255 255 255 / 80%);
  border-radius: 50%;
  font-size: 28px;
}

article .content {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 400px;
  z-index: 1;
  opacity: 0;
  visibility: hidden;
  padding: 100px 0 20px 20px;
  display: flex;
  align-items: center;
  gap: 14px;
  background: linear-gradient(to bottom, rgb(0 0 0 / 0%), rgb(0 0 0 / 80%));
  transition: 0.25s;
}

article.active .content {
  opacity: 1;
  visibility: visible;
}

article img {
  position: absolute;
  z-index: 0;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  height: 150%;
  filter: grayscale(0.5);
}
/* FINALIZA CODIGO BOTON FLOTANTE */

/* inicia codigo boton back in time seccion about */
.sparkle-button {
  --active: 0;
  --bg: radial-gradient(
			40% 50% at center 100%,
			hsl(270 calc(var(--active) * 97%) 72% / var(--active)),
			transparent
		),
		radial-gradient(
			80% 100% at center 120%,
			hsl(260 calc(var(--active) * 97%) 70% / var(--active)),
			transparent
		),
		hsl(260 calc(var(--active) * 97%) calc((var(--active) * 44%) + 12%));
  background: var(--bg);
  font-size: 1.2rem;
  font-weight: 500;
  border: 0;
  cursor: pointer;
  padding: 1em 1em;
  display: flex;
  align-items: center;
  gap: 0.25em;
  white-space: nowrap;
  border-radius: 100px;
  position: relative;
  box-shadow: 0 0 calc(var(--active) * 3em) calc(var(--active) * 1em) hsl(260 97% 61% / 0.75),
		0 0em 0 0 hsl(260 calc(var(--active) * 97%) calc((var(--active) * 50%) + 30%)) inset,
		0 -0.05em 0 0 hsl(260 calc(var(--active) * 97%) calc(var(--active) * 60%)) inset;
  transition: box-shadow var(--transition), scale var(--transition), background var(--transition);
  scale: calc(1 + (var(--active) * 0.1));
  transition: .3s;
}

.sparkle-button:active {
  scale: 1;
  transition: .3s;
}

.sparkle path {
  color: hsl(0 0% calc((var(--active, 0) * 70%) + var(--base)));
  transform-box: fill-box;
  transform-origin: center;
  fill: currentColor;
  stroke: currentColor;
  animation-delay: calc((var(--transition) * 1.5) + (var(--delay) * 1s));
  animation-duration: 0.6s;
  transition: color var(--transition);
}

.sparkle-button:is(:hover, :focus-visible) path {
  animation-name: bounce;
}

@keyframes bounce {
  35%, 65% {
    scale: var(--scale);
  }
}

.sparkle path:nth-of-type(1) {
  --scale: 0.5;
  --delay: 0.1;
  --base: 40%;
}

.sparkle path:nth-of-type(2) {
  --scale: 1.5;
  --delay: 0.2;
  --base: 20%;
}

.sparkle path:nth-of-type(3) {
  --scale: 2.5;
  --delay: 0.35;
  --base: 30%;
}

.sparkle-button:before {
  content: "";
  position: absolute;
  inset: -0.2em;
  z-index: -1;
  border: 0.25em solid hsl(260 97% 50% / 0.5);
  border-radius: 100px;
  opacity: var(--active, 0);
  transition: opacity var(--transition);
}

.spark {
  position: absolute;
  inset: 0;
  border-radius: 100px;
  rotate: 0deg;
  overflow: hidden;
  mask: linear-gradient(white, transparent 50%);
  animation: flip calc(var(--spark) * 2) infinite steps(2, end);
}

@keyframes flip {
  to {
    rotate: 360deg;
  }
}

.spark:before {
  content: "";
  position: absolute;
  width: 200%;
  aspect-ratio: 1;
  top: 0%;
  left: 50%;
  z-index: -1;
  translate: -50% -15%;
  rotate: 0;
  transform: rotate(-90deg);
  opacity: calc((var(--active)) + 0.4);
  background: conic-gradient(
		from 0deg,
		transparent 0 340deg,
		white 360deg
	);
  transition: opacity var(--transition);
  animation: rotate var(--spark) linear infinite both;
}

.spark:after {
  content: "";
  position: absolute;
  inset: var(--cut);
  border-radius: 100px;
}

.backdrop {
  position: absolute;
  inset: var(--cut);
  background: var(--bg);
  border-radius: 100px;
  transition: background var(--transition);
}

@keyframes rotate {
  to {
    transform: rotate(90deg);
  }
}

@supports(selector(:has(:is(+ *)))) {
  body:has(button:is(:hover, :focus-visible)) {
    --active: 1;
    --play-state: running;
  }

  .bodydrop {
    display: none;
  }
}

.sparkle-button:is(:hover, :focus-visible) ~ :is(.bodydrop, .particle-pen) {
  --active: 1;
  --play-state: runnin;
}

.sparkle-button:is(:hover, :focus-visible) {
  --active: 1;
  --play-state: running;
}

.sp {
  position: relative;
}

.particle-pen {
  position: absolute;
  width: 200%;
  aspect-ratio: 1;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  -webkit-mask: radial-gradient(white, transparent 65%);
  z-index: -1;
  opacity: var(--active, 0);
  transition: opacity var(--transition);
}

.particle {
  fill: white;
  width: calc(var(--size, 0.25) * 1rem);
  aspect-ratio: 1;
  position: absolute;
  top: calc(var(--y) * 1%);
  left: calc(var(--x) * 1%);
  opacity: var(--alpha, 1);
  animation: float-out calc(var(--duration, 1) * 1s) calc(var(--delay) * -1s) infinite linear;
  transform-origin: var(--origin-x, 1000%) var(--origin-y, 1000%);
  z-index: -1;
  animation-play-state: var(--play-state, paused);
}

.particle path {
  fill: hsl(0 0% 90%);
  stroke: none;
}

.particle:nth-of-type(even) {
  animation-direction: reverse;
}

@keyframes float-out {
  to {
    rotate: 360deg;
  }
}

.text {
  translate: 2% -6%;
  letter-spacing: 0.01ch;
  background: linear-gradient(90deg, hsl(0 0% calc((var(--active) * 100%) + 65%)), hsl(0 0% calc((var(--active) * 100%) + 26%)));
  -webkit-background-clip: text;
  color: transparent;
  transition: background var(--transition);
}

.sparkle-button svg {
  inline-size: 1.25em;
  translate: -25% -5%;
}

/* inicio boton go back en modal abierto */
button {
  position: relative;
  display: inline-block;
  cursor: pointer;
  outline: none;
  border: 0;
  vertical-align: middle;
  text-decoration: none;
  background: transparent;
  padding: 0;
  font-size: inherit;
  font-family: inherit;
 }
 
 button.learn-more {
  width: 12rem;
  height: auto;
 }
 
 button.learn-more .circle {
  transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);
  position: relative;
  display: block;
  margin: 0;
  width: 3rem;
  height: 3rem;
  background: #282936;
  border-radius: 1.625rem;
 }
 
 button.learn-more .circle .icon {
  transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
  background: #fff;
 }
 
 button.learn-more .circle .icon.arrow {
  transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);
  left: 0.625rem;
  width: 1.125rem;
  height: 0.125rem;
  background: none;
 }
 
 button.learn-more .circle .icon.arrow::before {
  position: absolute;
  content: "";
  top: -0.29rem;
  right: 0.0625rem;
  width: 0.625rem;
  height: 0.625rem;
  border-top: 0.125rem solid #fff;
  border-right: 0.125rem solid #fff;
  transform: rotate(45deg);
 }
 
 button.learn-more .button-text {
  transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 0.75rem 0;
  margin: 0 0 0 1.85rem;
  color: #282936;
  font-weight: 700;
  line-height: 1.6;
  text-align: center;
  text-transform: uppercase;
 }
 
 button:hover .circle {
  width: 100%;
 }
 
 button:hover .circle .icon.arrow {
  background: #fff;
  transform: translate(1rem, 0);
 }
 
 button:hover .button-text {
  color: #fff;
 }


/* Fondo desenfocado para pantallas pequeñas */
@media screen and (max-width: 768px) {
  .modal::before {
    filter: blur(10px); /* Ajusta la cantidad de desenfoque para pantallas pequeñas */
  }
}
